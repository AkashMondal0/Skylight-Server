# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  username: String!
  email: String!
  id: String
  name: String
  profilePicture: String
  followed_by: Boolean
  following: Boolean
}

type Friendship {
  following: Boolean
  followed_by: Boolean
  status: String
  isFeedFavorite: Boolean
  isCloseFriends: Boolean
  blocking: Boolean
  isRestricted: Boolean
  notificationPost: Boolean
  notificationStory: Boolean
  isNotificationReel: Boolean
  isMutingNotification: Boolean
  isMutingPost: Boolean
  isMutingStory: Boolean
  isMutingReel: Boolean
  outgoingRequest: Boolean
  incomingRequest: Boolean
}

type Profile {
  username: String
  email: String
  id: String
  name: String
  profilePicture: String
  followed_by: Boolean
  following: Boolean
  postCount: Float
  followerCount: Float
  followingCount: Float
  friendship: Friendship
  top_followers: [Author!]
}

type Comment {
  id: String!
  content: String!
  authorId: String!
  postId: String!
  createdAt: DateTime
  updatedAt: DateTime
  user: Author
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Post {
  id: String!
  content: String
  title: String
  fileUrl: [String!]
  song: [String!]
  tags: [String!]!
  locations: [String!]!
  country: String
  city: String
  createdAt: DateTime
  updatedAt: DateTime
  authorId: String
  username: String
  commentCount: Float
  likeCount: Float
  is_Liked: Boolean
  user: Author
  comments: [Comment!]
  likes: [Author!]
  top_Like: [Author!]
  status: [String!]
}

type Like {
  id: String!
  authorId: String!
  postId: String!
  createdAt: DateTime
  updatedAt: DateTime
  alreadyLiked: Boolean
  user: Author
}

type Message {
  id: String!
  conversationId: String!
  authorId: String
  content: String!
  user: Author
  fileUrl: [String!]
  deleted: Boolean
  seenBy: [String!]
  createdAt: DateTime
  updatedAt: DateTime
  members: [String!]
}

type Conversation {
  id: String!
  members: [String!]!
  authorId: String!
  messages: [Message!]
  user: Author
  isGroup: Boolean
  lastMessageContent: String
  totalUnreadMessagesCount: Float
  lastMessageCreatedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  groupName: String
  groupImage: String
  groupDescription: String
}

type Notification {
  id: String!
  type: String!
  authorId: String!
  recipientId: String!
  postId: String
  author: Author
  recipient: Author
  post: Post
  commentId: String
  storyId: String
  reelId: String
  createdAt: DateTime
  updatedAt: DateTime
  seen: String
}

type Query {
  findUserProfile(username: String!): Profile!
  findUsersByKeyword(keyword: String!): [Author!]!
  feedTimelineConnection: [Post!]!
  findAllPosts(findAllPosts: GraphQLPageQuery!): [Post!]!
  findOnePost(id: String!): Post!
  findAllComments(createCommentInput: GraphQLPageQuery!): [Comment!]!
  findAllLikes(findAllLikesInput: GraphQLPageQuery!): [Author!]!
  findAllConversation(GraphQLPageQuery: GraphQLPageQuery!): [Conversation!]!
  findOneConversation(GraphQLPageQuery: GraphQLPageQuery!): Conversation!
  findAllMessages(graphQLPageQuery: GraphQLPageQuery!): [Message!]!
  findAllFollower(viewFollowerInput: GraphQLPageQuery!): [Author!]!
  findAllFollowing(viewFollowingInput: GraphQLPageQuery!): [Author!]!
  findAllNotifications: [Notification!]!
}

input GraphQLPageQuery {
  id: String!
  offset: Float
  limit: Float
}

type Mutation {
  updateUserProfile(UpdateUsersInput: UpdateUsersInput!): Author!
  createPost(createPostInput: CreatePostInput!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  destroyComment(id: String!): Comment!
  createLike(id: String!): Like!
  destroyLike(id: String!): Like!
  createConversation(createConversationInput: CreateConversationInput!): Conversation!
  createMessage(createMessageInput: CreateMessageInput!): Message!
  seenMessages(conversationId: String!): Message!
  createFriendship(createFriendshipInput: CreateFriendshipInput!): Friendship!
  destroyFriendship(destroyFriendship: DestroyFriendship!): Friendship!
  createNotification(createNotificationInput: CreateNotificationInput!): Notification!
  destroyNotification(destroyNotificationInput: CreateNotificationInput!): Notification!
}

input UpdateUsersInput {
  username: String
  email: String
  name: String
  profilePicture: String
}

input CreatePostInput {
  content: String!
  fileUrl: [String!]
  authorId: String!
  title: String
  status: String!
}

input CreateCommentInput {
  """Example field (placeholder)"""
  postId: String!

  """Example field (placeholder)"""
  content: String!

  """Example field (placeholder)"""
  authorId: String!
}

input UpdateCommentInput {
  """Example field (placeholder)"""
  postId: String
  content: String!

  """Example field (placeholder)"""
  authorId: String
  id: String!
}

input CreateConversationInput {
  """Example field (placeholder)"""
  authorId: String

  """Example field (placeholder)"""
  memberIds: [String!]!

  """Example field (placeholder)"""
  isGroup: Boolean!

  """Example field (placeholder)"""
  groupName: String

  """Example field (placeholder)"""
  groupDescription: String

  """Example field (placeholder)"""
  groupImage: String
}

input CreateMessageInput {
  """Example field (placeholder)"""
  content: String!

  """Example field (placeholder)"""
  authorId: String!

  """Example field (placeholder)"""
  conversationId: String!

  """Example field (placeholder)"""
  fileUrl: [String!]!

  """Example field (placeholder)"""
  members: [String!]!
}

input CreateFriendshipInput {
  authorUsername: String!
  authorUserId: String!
  followingUsername: String!
  followingUserId: String!
}

input DestroyFriendship {
  authorUsername: String!
  authorUserId: String!
  followingUsername: String!
  followingUserId: String!
}

input CreateNotificationInput {
  type: String!
  authorId: String!
  recipientId: String!
  postId: String
  commentId: String
  storyId: String
  reelId: String
}