# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Users {
  id: ID!
  username: String!
  email: String!
  name: String!
  profilePicture: String
  password: String
  bio: String
  createdAt: DateTime
  updatedAt: DateTime
  roles: [String!]
  isVerified: Boolean
  isPrivate: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Author {
  id: String!
  username: String
  email: String
  name: String
  profilePicture: String
  followed_by: Boolean
  following: Boolean
}

type ProfileFriendship {
  status: String
  following: Boolean
  followed_by: Boolean
  isFeedFavorite: Boolean
  isCloseFriends: Boolean
  blocking: Boolean
  isRestricted: Boolean
  notificationPost: Boolean
  notificationStory: Boolean
  isNotificationReel: Boolean
  isMutingNotification: Boolean
  isMutingPost: Boolean
  isMutingStory: Boolean
  isMutingReel: Boolean
  outgoingRequest: Boolean
  incomingRequest: Boolean
}

type ProfileView {
  id: ID!
  username: String
  email: String
  name: String
  profilePicture: String
  postCount: Float
  followerCount: Float
  followingCount: Float
  friendship: ProfileFriendship
  top_followers: [Author!]
}

type Comment {
  id: ID!
  comment: String!
  authorId: ID!
  postId: ID!
  createdAt: DateTime
  updatedAt: DateTime
  user: Author
}

type Post {
  id: ID!
  content: String
  title: String
  fileUrl: [String!]!
  createdAt: DateTime
  updatedAt: DateTime
  authorId: ID
  commentCount: Float
  likeCount: Float
  is_Liked: Boolean
  user: Author
  comments: [Comment!]
  likes: [Author!]
  top_Like: [Author!]
}

type LikeResponse {
  like: Boolean!
}

type Friendship {
  friendShip: Boolean!
}

type Query {
  profileView(username: String!): ProfileView!
  feedTimelineConnection: [Post!]!
  postView(id: String!): Post!
}

type Mutation {
  createLike(id: String!): LikeResponse!
  destroyLike(id: String!): LikeResponse!
  createFriendship(createFriendshipInput: CreateFriendshipInput!): Friendship!
  destroyFriendship(destroyFriendship: DestroyFriendship!): Friendship!
}

input CreateFriendshipInput {
  authorUsername: String!
  authorUserId: String!
  followingUsername: String!
  followingUserId: String!
}

input DestroyFriendship {
  authorUsername: String!
  authorUserId: String!
  followingUsername: String!
  followingUserId: String!
}